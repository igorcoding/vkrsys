upstream vkrsys_server {
	# fail_timeout=0 means we always retry an upstream even if it failed
	# to return a good HTTP response (in case the Unicorn master nukes a
	# single worker for timing out).

	server unix:/home/igor/Projects/python/vkrsys/production/run/gunicorn.sock fail_timeout=0;
}

server {
	listen 8002;
	server_name localhost;

	client_max_body_size 4G;

	access_log /home/igor/Projects/python/vkrsys/production/logs/nginx_access.log;
	error_log /home/igor/Projects/python/vkrsys/production/logs/nginx_error.log;

	root /home/igor/Projects/python/vkrsys;
	index index.html index.htm;

	location /static/ {
		alias   /home/igor/Projects/python/vkrsys/app/static/;
		expires 1d;
		add_header Cache-Control private;
	}

	location / {
		# an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

		proxy_pass http://vkrsys_server/;
		proxy_cache off;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}
}

upstream recommender_server {
	# fail_timeout=0 means we always retry an upstream even if it failed
	# to return a good HTTP response (in case the Unicorn master nukes a
	# single worker for timing out).

	server 127.0.0.1:14000  max_fails=3     fail_timeout=1s;
}


server {
	listen 3333;
	# server_name localhost;

	client_max_body_size 4G;

	access_log /home/igor/Projects/python/vkrsys/production/logs/nginx_recommender_access.log;
	error_log /home/igor/Projects/python/vkrsys/production/logs/nginx_recommender_error.log;

	root /home/igor/Projects/python/vkrsys/recommender_api;
	index index.html index.htm;

	location / {
		# an HTTP header important enough to have its own Wikipedia entry:
		#   http://en.wikipedia.org/wiki/X-Forwarded-For
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# enable this if and only if you use HTTPS, this helps Rack
		# set the proper protocol for doing redirects:
		# proxy_set_header X-Forwarded-Proto https;

		# pass the Host: header from the client right along so redirects
		# can be set properly within the Rack application
		proxy_set_header Host $http_host;

		# we don't want nginx trying to do something clever with
		# redirects, we set the Host: header above already.
		proxy_redirect off;

		proxy_pass http://recommender_server/;
		proxy_cache off;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}



}
